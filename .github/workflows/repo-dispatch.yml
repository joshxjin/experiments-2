# This is a basic workflow to help you get started with Actions

name: Repo Dispatch

on:
  repository_dispatch:
    types: [on_demand]

jobs:
  trigger:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Trigger
        run: |
          echo "Received request from '${{ github.event.client_payload.repository }}'"
          echo "Test environment: '${{ github.event.client_payload.environment }}'"
          echo "Continue event_type: '${{ github.event.client_payload.continue_event_type }}'"
  
  do_things:
    needs: [ trigger ]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: do-things
        run: |
          if [ ${{ github.event.client_payload.environment }} == 'development' ]; then
            exit 0
          else
            exit 0
          fi

  return:
    needs: [ do_things ]
    if: always()
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      # Send repository_dispatch back to repo with event type "e2e_test_result_{environment}" to record result
      - name: Return Results
        run: |
          curl -X POST https://api.github.com/repos/${{ github.event.client_payload.repository }}/dispatches \
          -H 'Accept: application/vnd.github.v3+json' \
          -H 'Authorization: Bearer ${{ secrets.PAT }}' \
          --data '{"event_type": "e2e_test_result_${{ github.event.client_payload.environment }}", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'", "environment": "${{ github.event.client_payload.environment }}", "result": "'"${{ needs.do_things.result }}"'" }}'

      # Send an additional repository_dispatch back to repo to continue deployment
      - name: Continue Event
        if: (github.event.client_payload.continue_event_type)
        run: |
          curl -X POST https://api.github.com/repos/${{ github.event.client_payload.repository }}/dispatches \
          -H 'Accept: application/vnd.github.v3+json' \
          -H 'Authorization: Bearer ${{ secrets.PAT }}' \
          --data '{"event_type": "${{ github.event.client_payload.continue_event_type }}", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'", "environment": "${{ github.event.client_payload.environment }}", "result": "'"${{ needs.do_things.result }}"'" }}'
